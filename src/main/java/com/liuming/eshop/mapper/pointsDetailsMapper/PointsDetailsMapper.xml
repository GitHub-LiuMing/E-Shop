<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liuming.eshop.mapper.pointsDetailsMapper.PointsDetailsMapper" >
  <resultMap id="map" type="com.liuming.eshop.entity.pointsDetailsEntity.PointsDetails" >
    <id column="points_details_id" property="pointsDetailsId" jdbcType="VARCHAR" />
    <result column="member_id" property="memberId" jdbcType="VARCHAR" />
    <result column="member_wechat_name" property="memberWechatName" jdbcType="VARCHAR" />
    <result column="member_phone" property="memberPhone" jdbcType="VARCHAR" />
    <result column="before_modify_points" property="beforeModifyPoints" jdbcType="INTEGER" />
    <result column="modify_points" property="modifyPoints" jdbcType="INTEGER" />
    <result column="after_modify_points" property="afterModifyPoints" jdbcType="INTEGER" />
    <result column="points_details_type" property="pointsDetailsType" jdbcType="INTEGER" />
    <result column="points_details_details" property="pointsDetailsDetails" jdbcType="VARCHAR" />
    <result column="points_details_status" property="pointsDetailsStatus" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="points_details_created_date" property="pointsDetailsCreatedDate" jdbcType="TIMESTAMP" />
    <result column="points_details_updated_date" property="pointsDetailsUpdatedDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    points_details_id, member_id, member_wechat_name, member_phone, before_modify_points, 
    modify_points, after_modify_points, points_details_type, points_details_details, 
    points_details_status, remark, points_details_created_date, points_details_updated_date
  </sql>
  <select id="selectByExample" resultMap="map" parameterType="com.liuming.eshop.entity.pointsDetailsEntity.PointsDetailsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from points_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="map" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from points_details
    where points_details_id = #{pointsDetailsId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from points_details
    where points_details_id = #{pointsDetailsId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.liuming.eshop.entity.pointsDetailsEntity.PointsDetailsExample" >
    delete from points_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liuming.eshop.entity.pointsDetailsEntity.PointsDetails" >
    insert into points_details (points_details_id, member_id, member_wechat_name, 
      member_phone, before_modify_points, modify_points, 
      after_modify_points, points_details_type, points_details_details, 
      points_details_status, remark, points_details_created_date, 
      points_details_updated_date)
    values (#{pointsDetailsId,jdbcType=VARCHAR}, #{memberId,jdbcType=VARCHAR}, #{memberWechatName,jdbcType=VARCHAR}, 
      #{memberPhone,jdbcType=VARCHAR}, #{beforeModifyPoints,jdbcType=INTEGER}, #{modifyPoints,jdbcType=INTEGER}, 
      #{afterModifyPoints,jdbcType=INTEGER}, #{pointsDetailsType,jdbcType=INTEGER}, #{pointsDetailsDetails,jdbcType=VARCHAR}, 
      #{pointsDetailsStatus,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{pointsDetailsCreatedDate,jdbcType=TIMESTAMP}, 
      #{pointsDetailsUpdatedDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.liuming.eshop.entity.pointsDetailsEntity.PointsDetails" >
    insert into points_details
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pointsDetailsId != null" >
        points_details_id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="memberWechatName != null" >
        member_wechat_name,
      </if>
      <if test="memberPhone != null" >
        member_phone,
      </if>
      <if test="beforeModifyPoints != null" >
        before_modify_points,
      </if>
      <if test="modifyPoints != null" >
        modify_points,
      </if>
      <if test="afterModifyPoints != null" >
        after_modify_points,
      </if>
      <if test="pointsDetailsType != null" >
        points_details_type,
      </if>
      <if test="pointsDetailsDetails != null" >
        points_details_details,
      </if>
      <if test="pointsDetailsStatus != null" >
        points_details_status,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="pointsDetailsCreatedDate != null" >
        points_details_created_date,
      </if>
      <if test="pointsDetailsUpdatedDate != null" >
        points_details_updated_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pointsDetailsId != null" >
        #{pointsDetailsId,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="memberWechatName != null" >
        #{memberWechatName,jdbcType=VARCHAR},
      </if>
      <if test="memberPhone != null" >
        #{memberPhone,jdbcType=VARCHAR},
      </if>
      <if test="beforeModifyPoints != null" >
        #{beforeModifyPoints,jdbcType=INTEGER},
      </if>
      <if test="modifyPoints != null" >
        #{modifyPoints,jdbcType=INTEGER},
      </if>
      <if test="afterModifyPoints != null" >
        #{afterModifyPoints,jdbcType=INTEGER},
      </if>
      <if test="pointsDetailsType != null" >
        #{pointsDetailsType,jdbcType=INTEGER},
      </if>
      <if test="pointsDetailsDetails != null" >
        #{pointsDetailsDetails,jdbcType=VARCHAR},
      </if>
      <if test="pointsDetailsStatus != null" >
        #{pointsDetailsStatus,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="pointsDetailsCreatedDate != null" >
        #{pointsDetailsCreatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="pointsDetailsUpdatedDate != null" >
        #{pointsDetailsUpdatedDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liuming.eshop.entity.pointsDetailsEntity.PointsDetailsExample" resultType="java.lang.Integer" >
    select count(*) from points_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update points_details
    <set >
      <if test="record.pointsDetailsId != null" >
        points_details_id = #{record.pointsDetailsId,jdbcType=VARCHAR},
      </if>
      <if test="record.memberId != null" >
        member_id = #{record.memberId,jdbcType=VARCHAR},
      </if>
      <if test="record.memberWechatName != null" >
        member_wechat_name = #{record.memberWechatName,jdbcType=VARCHAR},
      </if>
      <if test="record.memberPhone != null" >
        member_phone = #{record.memberPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.beforeModifyPoints != null" >
        before_modify_points = #{record.beforeModifyPoints,jdbcType=INTEGER},
      </if>
      <if test="record.modifyPoints != null" >
        modify_points = #{record.modifyPoints,jdbcType=INTEGER},
      </if>
      <if test="record.afterModifyPoints != null" >
        after_modify_points = #{record.afterModifyPoints,jdbcType=INTEGER},
      </if>
      <if test="record.pointsDetailsType != null" >
        points_details_type = #{record.pointsDetailsType,jdbcType=INTEGER},
      </if>
      <if test="record.pointsDetailsDetails != null" >
        points_details_details = #{record.pointsDetailsDetails,jdbcType=VARCHAR},
      </if>
      <if test="record.pointsDetailsStatus != null" >
        points_details_status = #{record.pointsDetailsStatus,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.pointsDetailsCreatedDate != null" >
        points_details_created_date = #{record.pointsDetailsCreatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pointsDetailsUpdatedDate != null" >
        points_details_updated_date = #{record.pointsDetailsUpdatedDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update points_details
    set points_details_id = #{record.pointsDetailsId,jdbcType=VARCHAR},
      member_id = #{record.memberId,jdbcType=VARCHAR},
      member_wechat_name = #{record.memberWechatName,jdbcType=VARCHAR},
      member_phone = #{record.memberPhone,jdbcType=VARCHAR},
      before_modify_points = #{record.beforeModifyPoints,jdbcType=INTEGER},
      modify_points = #{record.modifyPoints,jdbcType=INTEGER},
      after_modify_points = #{record.afterModifyPoints,jdbcType=INTEGER},
      points_details_type = #{record.pointsDetailsType,jdbcType=INTEGER},
      points_details_details = #{record.pointsDetailsDetails,jdbcType=VARCHAR},
      points_details_status = #{record.pointsDetailsStatus,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      points_details_created_date = #{record.pointsDetailsCreatedDate,jdbcType=TIMESTAMP},
      points_details_updated_date = #{record.pointsDetailsUpdatedDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liuming.eshop.entity.pointsDetailsEntity.PointsDetails" >
    update points_details
    <set >
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="memberWechatName != null" >
        member_wechat_name = #{memberWechatName,jdbcType=VARCHAR},
      </if>
      <if test="memberPhone != null" >
        member_phone = #{memberPhone,jdbcType=VARCHAR},
      </if>
      <if test="beforeModifyPoints != null" >
        before_modify_points = #{beforeModifyPoints,jdbcType=INTEGER},
      </if>
      <if test="modifyPoints != null" >
        modify_points = #{modifyPoints,jdbcType=INTEGER},
      </if>
      <if test="afterModifyPoints != null" >
        after_modify_points = #{afterModifyPoints,jdbcType=INTEGER},
      </if>
      <if test="pointsDetailsType != null" >
        points_details_type = #{pointsDetailsType,jdbcType=INTEGER},
      </if>
      <if test="pointsDetailsDetails != null" >
        points_details_details = #{pointsDetailsDetails,jdbcType=VARCHAR},
      </if>
      <if test="pointsDetailsStatus != null" >
        points_details_status = #{pointsDetailsStatus,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="pointsDetailsCreatedDate != null" >
        points_details_created_date = #{pointsDetailsCreatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="pointsDetailsUpdatedDate != null" >
        points_details_updated_date = #{pointsDetailsUpdatedDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where points_details_id = #{pointsDetailsId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liuming.eshop.entity.pointsDetailsEntity.PointsDetails" >
    update points_details
    set member_id = #{memberId,jdbcType=VARCHAR},
      member_wechat_name = #{memberWechatName,jdbcType=VARCHAR},
      member_phone = #{memberPhone,jdbcType=VARCHAR},
      before_modify_points = #{beforeModifyPoints,jdbcType=INTEGER},
      modify_points = #{modifyPoints,jdbcType=INTEGER},
      after_modify_points = #{afterModifyPoints,jdbcType=INTEGER},
      points_details_type = #{pointsDetailsType,jdbcType=INTEGER},
      points_details_details = #{pointsDetailsDetails,jdbcType=VARCHAR},
      points_details_status = #{pointsDetailsStatus,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      points_details_created_date = #{pointsDetailsCreatedDate,jdbcType=TIMESTAMP},
      points_details_updated_date = #{pointsDetailsUpdatedDate,jdbcType=TIMESTAMP}
    where points_details_id = #{pointsDetailsId,jdbcType=VARCHAR}
  </update>

  <select id="findPointsDetailsDescLimit1" resultMap="map">
    SELECT
    <include refid="Base_Column_List" />
    FROM
	    points_details
    WHERE
        member_id = #{map.memberId}
    ORDER BY
	    points_details_id DESC
	LIMIT 1
  </select>

  <select id="findPointsDetails" resultMap="map">
    SELECT
    <include refid="Base_Column_List" />
    FROM
    points_details
    WHERE
    1 = 1
    <if test="map.memberId != null" >
      AND member_id = #{map.memberId,jdbcType=VARCHAR}
    </if>
    <if test="map.memberWechatName != null" >
      AND member_wechat_name = #{map.memberWechatName,jdbcType=VARCHAR}
    </if>
    <if test="map.memberPhone != null" >
      AND member_phone = #{map.memberPhone,jdbcType=VARCHAR}
    </if>
    <if test="map.beforeModifyPoints != null" >
      AND before_modify_points = #{map.beforeModifyPoints,jdbcType=INTEGER}
    </if>
    <if test="map.modifyPoints != null" >
      AND modify_points = #{map.modifyPoints,jdbcType=INTEGER}
    </if>
    <if test="map.afterModifyPoints != null" >
      AND after_modify_points = #{map.afterModifyPoints,jdbcType=INTEGER}
    </if>
    <if test="map.pointsDetailsType != null" >
      AND points_details_type = #{map.pointsDetailsType,jdbcType=INTEGER}
    </if>
    <if test="map.pointsDetailsDetails != null" >
      AND points_details_details = #{map.pointsDetailsDetails,jdbcType=VARCHAR}
    </if>
    <if test="map.pointsDetailsStatus != null" >
      AND points_details_status = #{map.pointsDetailsStatus,jdbcType=INTEGER}
    </if>
    <if test="map.remark != null" >
      AND remark = #{map.remark,jdbcType=VARCHAR}
    </if>
    <if test="map.pointsDetailsCreatedDate != null" >
      AND points_details_created_date = #{map.pointsDetailsCreatedDate,jdbcType=TIMESTAMP}
    </if>
    <if test="map.pointsDetailsUpdatedDate != null" >
      AND points_details_updated_date = #{map.pointsDetailsUpdatedDate,jdbcType=TIMESTAMP}
    </if>
  </select>
  
  <select id="findPointsDetailsByAfter" parameterType="java.lang.String" resultMap="map">
    SELECT
        *
    FROM
        ( SELECT * FROM points_details WHERE member_id = #{memberId} ORDER BY points_details_updated_date DESC ) a
    GROUP BY
        member_id;
  </select>
</mapper>