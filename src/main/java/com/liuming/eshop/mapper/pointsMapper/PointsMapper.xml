<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liuming.eshop.mapper.pointsMapper.PointsMapper" >
  <resultMap id="BaseResultMap" type="com.liuming.eshop.entity.pointsEntity.Points" >
    <id column="points_id" property="pointsId" jdbcType="VARCHAR" />
    <result column="points_regulation" property="pointsRegulation" jdbcType="INTEGER" />
    <result column="points" property="points" jdbcType="INTEGER" />
    <result column="points_status" property="pointsStatus" jdbcType="INTEGER" />
    <result column="points_created_date" property="pointsCreatedDate" jdbcType="TIMESTAMP" />
    <result column="points_updated_date" property="pointsUpdatedDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    points_id, points_regulation, points, points_status, points_created_date, points_updated_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.liuming.eshop.entity.pointsEntity.PointsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from points
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from points
    where points_id = #{pointsId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from points
    where points_id = #{pointsId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.liuming.eshop.entity.pointsEntity.PointsExample" >
    delete from points
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liuming.eshop.entity.pointsEntity.Points" >
    insert into points (points_id, points_regulation, points, 
      points_status, points_created_date, points_updated_date
      )
    values (#{pointsId,jdbcType=VARCHAR}, #{pointsRegulation,jdbcType=INTEGER}, #{points,jdbcType=INTEGER}, 
      #{pointsStatus,jdbcType=INTEGER}, #{pointsCreatedDate,jdbcType=TIMESTAMP}, #{pointsUpdatedDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.liuming.eshop.entity.pointsEntity.Points" >
    insert into points
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pointsId != null" >
        points_id,
      </if>
      <if test="pointsRegulation != null" >
        points_regulation,
      </if>
      <if test="points != null" >
        points,
      </if>
      <if test="pointsStatus != null" >
        points_status,
      </if>
      <if test="pointsCreatedDate != null" >
        points_created_date,
      </if>
      <if test="pointsUpdatedDate != null" >
        points_updated_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pointsId != null" >
        #{pointsId,jdbcType=VARCHAR},
      </if>
      <if test="pointsRegulation != null" >
        #{pointsRegulation,jdbcType=INTEGER},
      </if>
      <if test="points != null" >
        #{points,jdbcType=INTEGER},
      </if>
      <if test="pointsStatus != null" >
        #{pointsStatus,jdbcType=INTEGER},
      </if>
      <if test="pointsCreatedDate != null" >
        #{pointsCreatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="pointsUpdatedDate != null" >
        #{pointsUpdatedDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liuming.eshop.entity.pointsEntity.PointsExample" resultType="java.lang.Integer" >
    select count(*) from points
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update points
    <set >
      <if test="record.pointsId != null" >
        points_id = #{record.pointsId,jdbcType=VARCHAR},
      </if>
      <if test="record.pointsRegulation != null" >
        points_regulation = #{record.pointsRegulation,jdbcType=INTEGER},
      </if>
      <if test="record.points != null" >
        points = #{record.points,jdbcType=INTEGER},
      </if>
      <if test="record.pointsStatus != null" >
        points_status = #{record.pointsStatus,jdbcType=INTEGER},
      </if>
      <if test="record.pointsCreatedDate != null" >
        points_created_date = #{record.pointsCreatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pointsUpdatedDate != null" >
        points_updated_date = #{record.pointsUpdatedDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update points
    set points_id = #{record.pointsId,jdbcType=VARCHAR},
      points_regulation = #{record.pointsRegulation,jdbcType=INTEGER},
      points = #{record.points,jdbcType=INTEGER},
      points_status = #{record.pointsStatus,jdbcType=INTEGER},
      points_created_date = #{record.pointsCreatedDate,jdbcType=TIMESTAMP},
      points_updated_date = #{record.pointsUpdatedDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liuming.eshop.entity.pointsEntity.Points" >
    update points
    <set >
      <if test="pointsRegulation != null" >
        points_regulation = #{pointsRegulation,jdbcType=INTEGER},
      </if>
      <if test="points != null" >
        points = #{points,jdbcType=INTEGER},
      </if>
      <if test="pointsStatus != null" >
        points_status = #{pointsStatus,jdbcType=INTEGER},
      </if>
      <if test="pointsCreatedDate != null" >
        points_created_date = #{pointsCreatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="pointsUpdatedDate != null" >
        points_updated_date = #{pointsUpdatedDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where points_id = #{pointsId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liuming.eshop.entity.pointsEntity.Points" >
    update points
    set points_regulation = #{pointsRegulation,jdbcType=INTEGER},
      points = #{points,jdbcType=INTEGER},
      points_status = #{pointsStatus,jdbcType=INTEGER},
      points_created_date = #{pointsCreatedDate,jdbcType=TIMESTAMP},
      points_updated_date = #{pointsUpdatedDate,jdbcType=TIMESTAMP}
    where points_id = #{pointsId,jdbcType=VARCHAR}
  </update>

  <select id="findPointsDetailsByidAndtoDays" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT
        *
    FROM
        points
    WHERE
        to_days ( points_created_date ) = to_days(
        #{format}
        )
  </select>

  <select id="findPoints" resultMap="BaseResultMap">
    SELECT
        *
    FROM
        points
  </select>
</mapper>