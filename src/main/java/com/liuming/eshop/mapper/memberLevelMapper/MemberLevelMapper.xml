<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liuming.eshop.mapper.memberLevelMapper.MemberLevelMapper" >
  <resultMap id="BaseResultMap" type="com.liuming.eshop.entity.memberLevelEntity.MemberLevel" >
    <id column="member_level_id" property="memberLevelId" jdbcType="VARCHAR" />
    <result column="member_level_name" property="memberLevelName" jdbcType="VARCHAR" />
    <result column="member_level_transactions_limit" property="memberLevelTransactionsLimit" jdbcType="INTEGER" />
    <result column="member_level_item" property="memberLevelItem" jdbcType="VARCHAR" />
    <result column="member_level_item_rule" property="memberLevelItemRule" jdbcType="INTEGER" />
    <result column="member_level_discount" property="memberLevelDiscount" jdbcType="DOUBLE" />
    <result column="member_level_points" property="memberLevelPoints" jdbcType="DOUBLE" />
    <result column="member_level_status" property="memberLevelStatus" jdbcType="INTEGER" />
    <result column="member_level_created_date" property="memberLevelCreatedDate" jdbcType="TIMESTAMP" />
    <result column="member_level_updated_date" property="memberLevelUpdatedDate" jdbcType="TIMESTAMP" />
    <result column="member_level_deleted_date" property="memberLevelDeletedDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    member_level_id, member_level_name, member_level_transactions_limit, member_level_item, 
    member_level_item_rule, member_level_discount, member_level_points, member_level_status, 
    member_level_created_date, member_level_updated_date, member_level_deleted_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.liuming.eshop.entity.memberLevelEntity.MemberLevelExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member_level
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from member_level
    where member_level_id = #{memberLevelId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from member_level
    where member_level_id = #{memberLevelId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.liuming.eshop.entity.memberLevelEntity.MemberLevelExample" >
    delete from member_level
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liuming.eshop.entity.memberLevelEntity.MemberLevel" >
    insert into member_level (member_level_id, member_level_name, member_level_transactions_limit, 
      member_level_item, member_level_item_rule, member_level_discount, 
      member_level_points, member_level_status, member_level_created_date, 
      member_level_updated_date, member_level_deleted_date
      )
    values (#{memberLevelId,jdbcType=VARCHAR}, #{memberLevelName,jdbcType=VARCHAR}, #{memberLevelTransactionsLimit,jdbcType=INTEGER}, 
      #{memberLevelItem,jdbcType=VARCHAR}, #{memberLevelItemRule,jdbcType=INTEGER}, #{memberLevelDiscount,jdbcType=DOUBLE}, 
      #{memberLevelPoints,jdbcType=DOUBLE}, #{memberLevelStatus,jdbcType=INTEGER}, #{memberLevelCreatedDate,jdbcType=TIMESTAMP}, 
      #{memberLevelUpdatedDate,jdbcType=TIMESTAMP}, #{memberLevelDeletedDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.liuming.eshop.entity.memberLevelEntity.MemberLevel" >
    insert into member_level
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="memberLevelId != null" >
        member_level_id,
      </if>
      <if test="memberLevelName != null" >
        member_level_name,
      </if>
      <if test="memberLevelTransactionsLimit != null" >
        member_level_transactions_limit,
      </if>
      <if test="memberLevelItem != null" >
        member_level_item,
      </if>
      <if test="memberLevelItemRule != null" >
        member_level_item_rule,
      </if>
      <if test="memberLevelDiscount != null" >
        member_level_discount,
      </if>
      <if test="memberLevelPoints != null" >
        member_level_points,
      </if>
      <if test="memberLevelStatus != null" >
        member_level_status,
      </if>
      <if test="memberLevelCreatedDate != null" >
        member_level_created_date,
      </if>
      <if test="memberLevelUpdatedDate != null" >
        member_level_updated_date,
      </if>
      <if test="memberLevelDeletedDate != null" >
        member_level_deleted_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="memberLevelId != null" >
        #{memberLevelId,jdbcType=VARCHAR},
      </if>
      <if test="memberLevelName != null" >
        #{memberLevelName,jdbcType=VARCHAR},
      </if>
      <if test="memberLevelTransactionsLimit != null" >
        #{memberLevelTransactionsLimit,jdbcType=INTEGER},
      </if>
      <if test="memberLevelItem != null" >
        #{memberLevelItem,jdbcType=VARCHAR},
      </if>
      <if test="memberLevelItemRule != null" >
        #{memberLevelItemRule,jdbcType=INTEGER},
      </if>
      <if test="memberLevelDiscount != null" >
        #{memberLevelDiscount,jdbcType=DOUBLE},
      </if>
      <if test="memberLevelPoints != null" >
        #{memberLevelPoints,jdbcType=DOUBLE},
      </if>
      <if test="memberLevelStatus != null" >
        #{memberLevelStatus,jdbcType=INTEGER},
      </if>
      <if test="memberLevelCreatedDate != null" >
        #{memberLevelCreatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="memberLevelUpdatedDate != null" >
        #{memberLevelUpdatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="memberLevelDeletedDate != null" >
        #{memberLevelDeletedDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liuming.eshop.entity.memberLevelEntity.MemberLevelExample" resultType="java.lang.Integer" >
    select count(*) from member_level
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update member_level
    <set >
      <if test="record.memberLevelId != null" >
        member_level_id = #{record.memberLevelId,jdbcType=VARCHAR},
      </if>
      <if test="record.memberLevelName != null" >
        member_level_name = #{record.memberLevelName,jdbcType=VARCHAR},
      </if>
      <if test="record.memberLevelTransactionsLimit != null" >
        member_level_transactions_limit = #{record.memberLevelTransactionsLimit,jdbcType=INTEGER},
      </if>
      <if test="record.memberLevelItem != null" >
        member_level_item = #{record.memberLevelItem,jdbcType=VARCHAR},
      </if>
      <if test="record.memberLevelItemRule != null" >
        member_level_item_rule = #{record.memberLevelItemRule,jdbcType=INTEGER},
      </if>
      <if test="record.memberLevelDiscount != null" >
        member_level_discount = #{record.memberLevelDiscount,jdbcType=DOUBLE},
      </if>
      <if test="record.memberLevelPoints != null" >
        member_level_points = #{record.memberLevelPoints,jdbcType=DOUBLE},
      </if>
      <if test="record.memberLevelStatus != null" >
        member_level_status = #{record.memberLevelStatus,jdbcType=INTEGER},
      </if>
      <if test="record.memberLevelCreatedDate != null" >
        member_level_created_date = #{record.memberLevelCreatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.memberLevelUpdatedDate != null" >
        member_level_updated_date = #{record.memberLevelUpdatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.memberLevelDeletedDate != null" >
        member_level_deleted_date = #{record.memberLevelDeletedDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update member_level
    set member_level_id = #{record.memberLevelId,jdbcType=VARCHAR},
      member_level_name = #{record.memberLevelName,jdbcType=VARCHAR},
      member_level_transactions_limit = #{record.memberLevelTransactionsLimit,jdbcType=INTEGER},
      member_level_item = #{record.memberLevelItem,jdbcType=VARCHAR},
      member_level_item_rule = #{record.memberLevelItemRule,jdbcType=INTEGER},
      member_level_discount = #{record.memberLevelDiscount,jdbcType=DOUBLE},
      member_level_points = #{record.memberLevelPoints,jdbcType=DOUBLE},
      member_level_status = #{record.memberLevelStatus,jdbcType=INTEGER},
      member_level_created_date = #{record.memberLevelCreatedDate,jdbcType=TIMESTAMP},
      member_level_updated_date = #{record.memberLevelUpdatedDate,jdbcType=TIMESTAMP},
      member_level_deleted_date = #{record.memberLevelDeletedDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liuming.eshop.entity.memberLevelEntity.MemberLevel" >
    update member_level
    <set >
      <if test="memberLevelName != null" >
        member_level_name = #{memberLevelName,jdbcType=VARCHAR},
      </if>
      <if test="memberLevelTransactionsLimit != null" >
        member_level_transactions_limit = #{memberLevelTransactionsLimit,jdbcType=INTEGER},
      </if>
      <if test="memberLevelItem != null" >
        member_level_item = #{memberLevelItem,jdbcType=VARCHAR},
      </if>
      <if test="memberLevelItemRule != null" >
        member_level_item_rule = #{memberLevelItemRule,jdbcType=INTEGER},
      </if>
      <if test="memberLevelDiscount != null" >
        member_level_discount = #{memberLevelDiscount,jdbcType=DOUBLE},
      </if>
      <if test="memberLevelPoints != null" >
        member_level_points = #{memberLevelPoints,jdbcType=DOUBLE},
      </if>
      <if test="memberLevelStatus != null" >
        member_level_status = #{memberLevelStatus,jdbcType=INTEGER},
      </if>
      <if test="memberLevelCreatedDate != null" >
        member_level_created_date = #{memberLevelCreatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="memberLevelUpdatedDate != null" >
        member_level_updated_date = #{memberLevelUpdatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="memberLevelDeletedDate != null" >
        member_level_deleted_date = #{memberLevelDeletedDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where member_level_id = #{memberLevelId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liuming.eshop.entity.memberLevelEntity.MemberLevel" >
    update member_level
    set member_level_name = #{memberLevelName,jdbcType=VARCHAR},
      member_level_transactions_limit = #{memberLevelTransactionsLimit,jdbcType=INTEGER},
      member_level_item = #{memberLevelItem,jdbcType=VARCHAR},
      member_level_item_rule = #{memberLevelItemRule,jdbcType=INTEGER},
      member_level_discount = #{memberLevelDiscount,jdbcType=DOUBLE},
      member_level_points = #{memberLevelPoints,jdbcType=DOUBLE},
      member_level_status = #{memberLevelStatus,jdbcType=INTEGER},
      member_level_created_date = #{memberLevelCreatedDate,jdbcType=TIMESTAMP},
      member_level_updated_date = #{memberLevelUpdatedDate,jdbcType=TIMESTAMP},
      member_level_deleted_date = #{memberLevelDeletedDate,jdbcType=TIMESTAMP}
    where member_level_id = #{memberLevelId,jdbcType=VARCHAR}
  </update>
  
  <select id="findMemberLevelAll" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM
        member_level
    WHERE
        member_level_status = 1
  </select>
</mapper>